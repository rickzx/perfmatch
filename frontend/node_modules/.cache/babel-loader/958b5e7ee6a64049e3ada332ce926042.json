{"ast":null,"code":"var _jsxFileName = \"/Users/riczhou/Documents/workspace/webapp/perfmatch/frontend/src/components/Employer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Employer = props => {\n  _s();\n\n  const [employer, setEmployer] = useState({\n    id: 0,\n    name: \"\",\n    age: -1,\n    profilePhoto: null,\n    description: \"\",\n    email: null,\n    createdAt: null\n  });\n  const id = props.match.params.id;\n  useEffect(() => {\n    getEmployerDetails();\n  }, []);\n\n  const getEmployerDetails = () => {\n    fetch(\"/api/getEmployer\" + \"?id=\" + id).then(response => response.json()).then(data => {\n      setEmployer({\n        name: data.name,\n        age: data.age,\n        profilePhoto: data.profile_photo,\n        description: data.description,\n        email: data.email,\n        createdAt: data.created_at\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", employer.name, \" \", employer.age, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", employer.description, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", employer.email, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Employer, \"AIVmyq5TvXi340l6iCtvts0kfBg=\");\n\n_c = Employer;\nexport default Employer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employer\");","map":{"version":3,"sources":["/Users/riczhou/Documents/workspace/webapp/perfmatch/frontend/src/components/Employer.js"],"names":["React","useEffect","useState","Employer","props","employer","setEmployer","id","name","age","profilePhoto","description","email","createdAt","match","params","getEmployerDetails","fetch","then","response","json","data","profile_photo","created_at"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AACrCK,IAAAA,EAAE,EAAE,CADiC;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,GAAG,EAAE,CAAC,CAH+B;AAIrCC,IAAAA,YAAY,EAAE,IAJuB;AAKrCC,IAAAA,WAAW,EAAE,EALwB;AAMrCC,IAAAA,KAAK,EAAE,IAN8B;AAOrCC,IAAAA,SAAS,EAAE;AAP0B,GAAD,CAAxC;AAUA,QAAMN,EAAE,GAAGH,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAmBR,EAA9B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,kBAAkB,GAAG,MAAM;AAC7BC,IAAAA,KAAK,CAAC,qBAAqB,MAArB,GAA8BV,EAA/B,CAAL,CAAwCW,IAAxC,CAA6CC,QAAQ,IACjDA,QAAQ,CAACC,IAAT,EADJ,EAEEF,IAFF,CAEOG,IAAI,IAAI;AACXf,MAAAA,WAAW,CAAC;AACRE,QAAAA,IAAI,EAAEa,IAAI,CAACb,IADH;AAERC,QAAAA,GAAG,EAAEY,IAAI,CAACZ,GAFF;AAGRC,QAAAA,YAAY,EAAEW,IAAI,CAACC,aAHX;AAIRX,QAAAA,WAAW,EAAEU,IAAI,CAACV,WAJV;AAKRC,QAAAA,KAAK,EAAES,IAAI,CAACT,KALJ;AAMRC,QAAAA,SAAS,EAAEQ,IAAI,CAACE;AANR,OAAD,CAAX;AAQH,KAXD;AAYH,GAbD;;AAeA,sBACI;AAAA,4BACI;AAAA,sBAAMlB,QAAQ,CAACG,IAAf,OAAsBH,QAAQ,CAACI,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,sBAAKJ,QAAQ,CAACM,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,sBAAKN,QAAQ,CAACO,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAvCD;;GAAMT,Q;;KAAAA,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Employer = (props) => {\n    const [employer, setEmployer] = useState({\n        id: 0,\n        name: \"\",\n        age: -1,\n        profilePhoto: null,\n        description: \"\",\n        email: null,\n        createdAt: null,\n    });\n\n    const id = props.match.params.id;\n\n    useEffect(() => {\n        getEmployerDetails();\n    }, []);\n\n    const getEmployerDetails = () => {\n        fetch(\"/api/getEmployer\" + \"?id=\" + id).then(response =>\n            response.json()\n        ).then(data => {\n            setEmployer({\n                name: data.name,\n                age: data.age,\n                profilePhoto: data.profile_photo,\n                description: data.description,\n                email: data.email,\n                createdAt: data.created_at,\n            });\n        });\n    };\n\n    return (\n        <div>\n            <h3> {employer.name} {employer.age} </h3>\n            <p> {employer.description} </p>\n            <p> {employer.email} </p>\n        </div>\n    )\n}\n\nexport default Employer\n"]},"metadata":{},"sourceType":"module"}